service.name = "test"
service.name = ${?SERVICE_NAME}



play.cache.bindCaches = ["user-token-cache"]

play.application.loader = "GlobalApplicationLoader"

play.crypto.secret="t8/52ctB`>yHHykTABpljXMgL4s6:msg;>AZPGzCFmF]9frTXjX515@G:TDS]k6y"
play.crypto.secret=${?APPLICATION_SECRET}

play.i18n.langs = [ "en", "ru", "ua" ]

play.http.filters = com.qvantel.rubik.csr.filters.Filters

play.filters.headers {
  allowActionSpecificHeaders = true
  frameOptions = "SAMEORIGIN"
  contentSecurityPolicy = "frame-ancestors 'self'"
  xssProtection = "1; mode=block"
  permittedCrossDomainPolicies = null
  contentTypeOptions = "nosniff"
}

# CSRF filter configuration
play.filters.csrf {
  cookie {
    name = "X-XSRF-TOKEN"
  }

  header {
    name = "Csrf-Token"
    bypass = false
  }

  contentType {
    blackList = [
      "application/x-www-form-urlencoded",
      "text/plain",
      "text/json",
      "application/json"
    ]
  }
}

play.http.requestHandler = "com.qvantel.rubik.csr.modules.HttpRequestHandler"

play.ws.ssl {
  debug = ${csr.ssl.default.ssl-config.debug}
}


akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = debug
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}


